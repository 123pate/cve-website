import Vue from 'vue';
import Vuex from 'vuex';

import NotificationData from '@/assets/data/NotificationBanner.json';

Vue.use(Vuex);

export default new Vuex.Store({
  state:
  {
    API_BASE: process.env.VUE_APP_API_BASE_URL,
    shouldDisplay: NotificationData.shouldDisplay,
    publishCount: NotificationData.publishCount,
    cveId: '',
    recordData: {},
    isSearching: false,
    error: false,
    serverError: false,
    showHelpText: false,
  },
  mutations: {
    hideNotificationBanner(state) {
      localStorage.setItem('shouldDisplay', false);
      state.shouldDisplay = false;
      localStorage.setItem('publishCount', NotificationData.publishCount);
    },
    initializeStore(state) {
      if (localStorage.getItem('shouldDisplay')) {
        state.shouldDisplay = false;
      }
    },
    showNotificationBanner(state) {
      if (localStorage.getItem('publishCount') !== NotificationData.publishCount.toString() && NotificationData.shouldDisplay !== false) {
        state.shouldDisplay = true;
        localStorage.setItem('shouldDisplay', true);
        if (localStorage.getItem('publishCount') > NotificationData.publishCount) {
          // Catch edge case where the publishCount in localstorage is higher than what we send
          localStorage.removeItem('publishCount');
        }
      }
    },
    updateState(state, changed) {
      Object.entries(changed)
        .forEach(([name, value]) => {
          state[name] = value;
          localStorage.setItem(name, value);
        });
    },
  },
});
