import Vue from 'vue';
import Vuex from 'vuex';

import NotificationData from '@/assets/data/NotificationBanner.json';

Vue.use(Vuex);

export default new Vuex.Store({
  state:
  {
    API_BASE: process.env.VUE_APP_API_BASE_URL,
    collapsed: NotificationData.collapsed,
    publishCount: NotificationData.publishCount,
    cveId: '',
    recordData: {},
    isSearching: false,
    error: false,
    serverError: false,
    showHelpText: false,
    showJsonRecord: false,
  },
  mutations: {
    initializeStore(state) {
      if (localStorage.getItem('collapsed')) {
        state.collapsed = false;
      }
    },
    showNotificationBanner(state) {
      if (localStorage.getItem('publishCount') !== NotificationData.publishCount.toString()) {
        state.collapsed = false;
        localStorage.setItem('collapsed', false);
        if (localStorage.getItem('publishCount') > NotificationData.publishCount) {
          // Catch edge case where the publishCount in localstorage is higher than what we send
          localStorage.removeItem('publishCount');
        }
      }
    },
    toggleNotificationBanner(state){
      //Reveal notification
      if (localStorage.getItem('collapsed') == 'true'){
        localStorage.setItem('collapsed', false);
        state.collapsed = false;
        localStorage.setItem('publishCount', NotificationData.publishCount);
      }
      //Collapse notification
      else{
        localStorage.setItem('collapsed', true);
        state.collapsed = true;
        localStorage.setItem('publishCount', NotificationData.publishCount);
      }
    },
    updateState(state, changed) {
      Object.entries(changed)
        .forEach(([name, value]) => {
          state[name] = value;
          localStorage.setItem(name, value);
        });
    },
  },
});
